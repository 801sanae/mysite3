<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd"
	xmlns:mvc="http://www.springframework.org/schema/mvc">



	<mvc:default-servlet-handler />

	<!-- 
		D.S가 controller에서 mapping이 없을 때 default Servlet에 위임(css, image)깨지는 
		이유? 
	-->
	
	<!-- the mvc resources tag does the magic 파일업로드처리3 -->
 	<mvc:resources mapping="/profile-images/**" location="file:/temp/" />

	<!-- validator, conversionService, messageConverter를 자동으로 등록 -->
	<mvc:annotation-driven >
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
			    <property name="supportedMediaTypes">
			        <list>
			             <value>text/html; charset=UTF-8</value>
			        </list>
			    </property>
			</bean>
			<!-- 자바의 객체를 json으로 변환 -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json; charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	<!-- argument resolver -->
	<mvc:argument-resolvers>
		<bean class="com.hanains.mysite.annotation.AuthUserHandlerMethodArgumentResolver" />
	</mvc:argument-resolvers> 
		
		
	</mvc:annotation-driven>

	<!-- annotation 을 만들때? message converter? -->

	<context:annotation-config />
	<context:component-scan base-package="com.hanains.mysite" />

	<!-- 
		Spring @MVC 모든 클래스를 스캔해서 annotation 생성해라 -> @Controller를 스캔해서 Controller 
		객체를 생성하게 한다. @Controller를 찾아 객체를 생성하고 메소드를 스캔을 한다. 메소드 스캔은 @RequestMapping 
		annotation을 스캔한다.
	-->



	<!-- 기본 뷰 리졸버 -->

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>
	
   <!-- Interceptors -->
    <mvc:interceptors>
    
    <mvc:interceptor>
    	<mvc:mapping path="/user/login"/>
    	<bean class="com.hanains.mysite.interceptor.AuthLoginInterceptor"/>
    </mvc:interceptor>
    
    <mvc:interceptor>
    	<mvc:mapping path="/user/logout"/>
    	<bean class="com.hanains.mysite.interceptor.AuthLogoutInterceptor"/>
    </mvc:interceptor>
    
<!--         
		<mvc:interceptor>
        	<mvc:mapping path="/board/**" />
    	<bean class="com.hanains.mysite.interceptor.MyInterceptor" />
        </mvc:interceptor> 
-->
        
<!--         
		<mvc:interceptor>
        	<mvc:mapping path="/user/**" />  
    	<bean class="com.hanains.mysite.interceptor.MyInterceptor2" />
        </mvc:interceptor> 
-->
        
         <mvc:interceptor>
        	<mvc:mapping path="/board/writeform" />  
				<mvc:mapping path="/**"/><!--  모든 메소드 클래스를 체크해라 하지만 -> authintercepter로 가서 이어서 설명-->
										 <!-- 하지만 이러면 CSS image도 다들어온다..-->
				<mvc:exclude-mapping path="/assets/*"/><!-- 제외해라 -->
    		<bean class="com.hanains.mysite.interceptor.AuthInterceptor" />
        </mvc:interceptor>
        
    </mvc:interceptors>
    
    
	<!-- 멀티파트 리졸버 파일업로드처리2 -->
	<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 최대업로드 가능한 바이트크기 -->
		<property name="maxUploadSize" value="52428800" />
		<!-- 디스크에 임시 파일을 생성하기 전에 메모리에 보관할수있는 최대 바이트 크기 -->
		<!-- property name="maxInMemorySize" value="52428800" /-->
		<!-- defaultEncoding -->
		<property name="defaultEncoding" value="utf-8" />
	</bean>	



</beans>